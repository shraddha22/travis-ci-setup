<!--
# Copyright 2011 Red Hat Inc.
#
# This file is part of solenopsis
#
# solenopsis is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
-->
<project name="SolenopsisBuild" basedir="." default="help" xmlns:solenopsis-util="http://solenopsis.org/Solenopsis/solenopsis">

    <!-- =========================================================================================== -->

	<import file="setup-solenopsis.xml"/>
	<import file="solenopsis-util.xml"/>

    <!-- =========================================================================================== -->

    <target name="help">
        <echo>
================================
= Solenopsis SFDC Utility Tool =
================================

       Targets
	   -------

Describe info an org:
	ant -f ${ant.file} describe-org-info

Describe metadata in an org:
	ant [-Dsf.metadata.RESULT_FILE="fully qualified path and file name"] -f ${ant.file} describe-metadata

List metadata in an org:
	ant [-Dsf.metadata.TYPE="some type"] [-Dsf.metadata.FOLDER="some folder"] [-Dsf.metadata.RESULT_FILE="fully qualified path and file name"] -f ${ant.file} list-metadata

Generate a package.xml with every element specified:
	ant [-Dsf.packageDir="directory to generate package.xml"] [-Dsf.version="version to generate"] -f ${ant.file} generate-package-full

Generate a package.xml with asterisk elements where appropriate:
	ant [-Dsf.packageDir="directory to generate package.xml"] [-Dsf.version="version to generate"] -f ${ant.file} generate-package

        </echo>
    </target>

    <!-- =========================================================================================== -->

	<target name="info" description="Emit information about solenopsis">
		<echo>
Solenopsis release version  [${solenopsis.release.VERSION}]
Solenopsis version          [${solenopsis.VERSION}]

Ant version                 [${ant.version}]
Java version                [${ant.java.version}]
		</echo>
	</target>

    <!-- =========================================================================================== -->

	<target name="describe-org-info" depends="info" description="Emit information about org">
		<solenopsis-util:describeOrgInfo/>
	</target>

    <!-- =========================================================================================== -->

	<target name="describe-metadata" depends="info" description="Emit the metadata types for an org">
		<solenopsis-util:describeMetadata/>
	</target>

    <!-- =========================================================================================== -->

	<target name="list-metadata" depends="info" description="Emit information about the metadata type">
		<solenopsis-util:listMetadata/>
	</target>

    <!-- =========================================================================================== -->

	<target name="generate-package-full" depends="info" description="Generate a complete package.xml with all elements defined">
		<solenopsis-util:generateCompletePackage/>
	</target>

    <!-- =========================================================================================== -->

	<target name="generate-package" depends="info" description="Generate a package.xml using asterisks where possible">
		<solenopsis-util:generatePackage/>
	</target>

    <!-- =========================================================================================== -->
</project>